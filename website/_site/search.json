[
  {
    "objectID": "index.html#introduction",
    "href": "index.html#introduction",
    "title": "Tracking the Intangible: Quantifying Effort in NFL Running Backs",
    "section": "Introduction",
    "text": "Introduction\nDescribe the problem and why it is important.\nAmerican Football is one of the most-watched and popular sports in the U.S., known for its quick decision-making, complex tactics, and athletically demanding displays of strength, endurance and speed."
  },
  {
    "objectID": "index.html#data",
    "href": "index.html#data",
    "title": "Tracking the Intangible: Quantifying Effort in NFL Running Backs",
    "section": "Data",
    "text": "Data\n\nDescribe the data you’re using in detail, where you accessed it, along with relevant exploratory data analysis (EDA). You should also include descriptions of any relevant data pre-processing steps (e.g., whether you consider specific observations, create any meaningful features, etc.—but don’t mention minor steps like column type conversion, filtering out unnecessary rows)\nThe data used for this project were from NFL Big Data Bowl 2022 Dataset (NFL Big Data Bowl 2022) on Kaggle.\nWe limited our dataset to NFL running backs with more than 20 rushes."
  },
  {
    "objectID": "index.html#methods",
    "href": "index.html#methods",
    "title": "Tracking the Intangible: Quantifying Effort in NFL Running Backs",
    "section": "Methods",
    "text": "Methods\n\nDescribe the modeling techniques you chose, their assumptions, justifications for why they are appropriate for the problem, and how you’re comparing/evaluating the different methods.\nUsed Dr. Ron Yurko and Quang Nguyen’s code to calculate distance from the nearest defender (Nguyen 2023)\nBased our AS/ AKE curved on the article titled “Individual acceleration-speed profile in-situ: A proof of concept in professional football players”(Morin et al. 2021)\nStill using the non-linear quantile regression plot? (Ding 2024)"
  },
  {
    "objectID": "index.html#results",
    "href": "index.html#results",
    "title": "Tracking the Intangible: Quantifying Effort in NFL Running Backs",
    "section": "Results",
    "text": "Results\nDescribe your results. This can include tables and plots showing your results, as well as text describing how your models worked and the appropriate interpretations of the relevant output. (Note: Don’t just write out the textbook interpretations of all model coefficients. Instead, interpret the output that is relevant for your question of interest that is framed in the introduction)"
  },
  {
    "objectID": "index.html#discussion",
    "href": "index.html#discussion",
    "title": "Tracking the Intangible: Quantifying Effort in NFL Running Backs",
    "section": "Discussion",
    "text": "Discussion\nGive your conclusions and summarize what you have learned with regards to your question of interest. Are there any limitations with the approaches you used? What do you think are the next steps to follow-up your project?"
  },
  {
    "objectID": "index.html#appendix-a-quick-tutorial",
    "href": "index.html#appendix-a-quick-tutorial",
    "title": "Tracking the Intangible: Quantifying Effort in NFL Running Backs",
    "section": "Appendix: A quick tutorial",
    "text": "Appendix: A quick tutorial\n(Feel free to remove this section when you submit)\nThis a Quarto document. To learn more about Quarto see https://quarto.org. You can use the Render button to see what it looks like in HTML.\n\nText formatting\nText can be bolded with double asterisks and italicized with single asterisks. Monospace text, such as for short code snippets, uses backticks. (Note these are different from quotation marks or apostrophes.) Links are written like this.\nBulleted lists can be written with asterisks:\n\nEach item starts on a new line with an asterisk.\nItems should start on the beginning of the line.\nLeave blank lines after the end of the list so the list does not continue.\n\nMathematics can be written with LaTeX syntax using dollar signs. For instance, using single dollar signs we can write inline math: (-b \\pm \\sqrt{b^2 - 4ac})/2a.\nTo write math in “display style”, i.e. displayed on its own line centered on the page, we use double dollar signs: \nx^2 + y^2 = 1\n\n\n\nCode blocks\nCode blocks are evaluated sequentially when you hit Render. As the code runs, R prints out which block is running, so naming blocks is useful if you want to know which one takes a long time. After the block name, you can specify chunk options. For example, echo controls whether the code is printed in the document. By default, output is printed in the document in monospace:\n\n\n                   mpg cyl disp  hp drat    wt  qsec vs am gear carb\nMazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4\nMazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4\nDatsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1\nHornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1\nHornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2\nValiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1\n\n\nChunk options can also be written inside the code block, which is helpful for really long options, as we’ll see soon.\n\n\n                   mpg cyl disp  hp drat    wt  qsec vs am gear carb\nMazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4\nMazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4\nDatsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1\nHornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1\nHornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2\nValiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1\n\n\n\n\nFigures\nIf a code block produces a plot or figure, this figure will automatically be inserted inline in the report. That is, it will be inserted exactly where the code block is.\n\n\n\n\n\nThis is a caption. It should explain what’s in the figure and what’s interesting about it. For instance: There is a negative, strong linear correlation between miles per gallon and horsepower for US cars in the 1970s.\n\n\n\n\nNotice the use of fig-width and fig-height to control the figure’s size (in inches). These control the sizes given to R when it generates the plot, so R proportionally adjusts the font sizes to be large enough.\n\n\nTables\nUse the knitr::kable() function to print tables as HTML:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmpg\ncyl\ndisp\nhp\ndrat\nwt\nqsec\nvs\nam\ngear\ncarb\n\n\n\n\nMazda RX4\n21.0\n6\n160\n110\n3.90\n2.620\n16.46\n0\n1\n4\n4\n\n\nMazda RX4 Wag\n21.0\n6\n160\n110\n3.90\n2.875\n17.02\n0\n1\n4\n4\n\n\nDatsun 710\n22.8\n4\n108\n93\n3.85\n2.320\n18.61\n1\n1\n4\n1\n\n\nHornet 4 Drive\n21.4\n6\n258\n110\n3.08\n3.215\n19.44\n1\n0\n3\n1\n\n\nHornet Sportabout\n18.7\n8\n360\n175\n3.15\n3.440\n17.02\n0\n0\n3\n2\n\n\n\n\n\nWe can summarize model results with a table. For instance, suppose we fit a linear regression model:\n\nmodel1 &lt;- lm(mpg ~ disp + hp + drat, data = mtcars)\n\nIt is not appropriate to simply print summary(model1) into the report. If we want the reader to understand what models we have fit and what their results are, we should provide a nicely formatted table. A simple option is to use the tidy() function from the broom package to get a data frame of the model fit, and simply report that as a table.\n\n\nPredicting fuel economy using vehicle features.\n\n\nTerm\nEstimate\nSE\nt\np\n\n\n\n\n(Intercept)\n19.34\n6.37\n3.04\n0.01\n\n\ndisp\n-0.02\n0.01\n-2.05\n0.05\n\n\nhp\n-0.03\n0.01\n-2.34\n0.03\n\n\ndrat\n2.71\n1.49\n1.83\n0.08"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Tracking the Intangible: Quantifying Effort in NFL Running Backs",
    "section": "",
    "text": "Image source: The Tower"
  },
  {
    "objectID": "appendix-page.html#appendix-a-quick-tutorial",
    "href": "appendix-page.html#appendix-a-quick-tutorial",
    "title": "Appendix",
    "section": "Appendix: A quick tutorial",
    "text": "Appendix: A quick tutorial\n(Feel free to remove this section when you submit)\nThis a Quarto document. To learn more about Quarto see https://quarto.org. You can use the Render button to see what it looks like in HTML.\n\nText formatting\nText can be bolded with double asterisks and italicized with single asterisks. Monospace text, such as for short code snippets, uses backticks. (Note these are different from quotation marks or apostrophes.) Links are written like this.\nBulleted lists can be written with asterisks:\n\nEach item starts on a new line with an asterisk.\nItems should start on the beginning of the line.\nLeave blank lines after the end of the list so the list does not continue.\n\nMathematics can be written with LaTeX syntax using dollar signs. For instance, using single dollar signs we can write inline math: \\((-b \\pm \\sqrt{b^2 - 4ac})/2a\\).\nTo write math in “display style”, i.e. displayed on its own line centered on the page, we use double dollar signs: \\[\nx^2 + y^2 = 1\n\\]\n\n\nCode blocks\nCode blocks are evaluated sequentially when you hit Render. As the code runs, R prints out which block is running, so naming blocks is useful if you want to know which one takes a long time. After the block name, you can specify chunk options. For example, echo controls whether the code is printed in the document. By default, output is printed in the document in monospace:\n\n\n                   mpg cyl disp  hp drat    wt  qsec vs am gear carb\nMazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4\nMazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4\nDatsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1\nHornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1\nHornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2\nValiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1\n\n\nChunk options can also be written inside the code block, which is helpful for really long options, as we’ll see soon.\n\n\n                   mpg cyl disp  hp drat    wt  qsec vs am gear carb\nMazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4\nMazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4\nDatsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1\nHornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1\nHornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2\nValiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1\n\n\n\n\nFigures\nIf a code block produces a plot or figure, this figure will automatically be inserted inline in the report. That is, it will be inserted exactly where the code block is.\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nmtcars |&gt; \n  ggplot(aes(x = mpg, y = hp)) +\n  geom_point() +\n  labs(x = \"Miles per gallon\",\n       y = \"Horsepower\")\n\n\n\n\nThis is a caption. It should explain what’s in the figure and what’s interesting about it. For instance: There is a negative, strong linear correlation between miles per gallon and horsepower for US cars in the 1970s.\n\n\n\n\nNotice the use of fig-width and fig-height to control the figure’s size (in inches). These control the sizes given to R when it generates the plot, so R proportionally adjusts the font sizes to be large enough.\n\n\nTables\nUse the knitr::kable() function to print tables as HTML:\n\nmtcars |&gt; \n  slice(1:5) |&gt; \n  knitr::kable()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmpg\ncyl\ndisp\nhp\ndrat\nwt\nqsec\nvs\nam\ngear\ncarb\n\n\n\n\nMazda RX4\n21.0\n6\n160\n110\n3.90\n2.620\n16.46\n0\n1\n4\n4\n\n\nMazda RX4 Wag\n21.0\n6\n160\n110\n3.90\n2.875\n17.02\n0\n1\n4\n4\n\n\nDatsun 710\n22.8\n4\n108\n93\n3.85\n2.320\n18.61\n1\n1\n4\n1\n\n\nHornet 4 Drive\n21.4\n6\n258\n110\n3.08\n3.215\n19.44\n1\n0\n3\n1\n\n\nHornet Sportabout\n18.7\n8\n360\n175\n3.15\n3.440\n17.02\n0\n0\n3\n2\n\n\n\n\n\nWe can summarize model results with a table. For instance, suppose we fit a linear regression model:\n\nmodel1 &lt;- lm(mpg ~ disp + hp + drat, data = mtcars)\n\nIt is not appropriate to simply print summary(model1) into the report. If we want the reader to understand what models we have fit and what their results are, we should provide a nicely formatted table. A simple option is to use the tidy() function from the broom package to get a data frame of the model fit, and simply report that as a table.\n\nlibrary(broom)\nmodel1 |&gt; \n  tidy() |&gt;\n  knitr::kable(digits = 2,\n               col.names = c(\"Term\", \"Estimate\", \"SE\", \"t\", \"p\"))\n\nPredicting fuel economy using vehicle features.\n\n\nTerm\nEstimate\nSE\nt\np\n\n\n\n\n(Intercept)\n19.34\n6.37\n3.04\n0.01\n\n\ndisp\n-0.02\n0.01\n-2.05\n0.05\n\n\nhp\n-0.03\n0.01\n-2.34\n0.03\n\n\ndrat\n2.71\n1.49\n1.83\n0.08"
  }
]